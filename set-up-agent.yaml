---
- name: Configure agents
  delegate_to: "{{ instance }}"
  block:
    - name: Create the node_exporter group
      ansible.builtin.group:
        name: "{{ node_exporter_system_group }}"
        state: present
        system: true
      when: node_exporter_system_group != "root"        

    - name: Create the node_exporter user
      ansible.builtin.user:
        name: "{{ node_exporter_system_user }}"
        groups: "{{ node_exporter_system_group }}"
        append: true
        shell: /usr/sbin/nologin
        system: true
        create_home: false
        home: /
      when: node_exporter_system_user != "root"

    - name: Create node_exporter cert dir
      file:
        path: "/etc/node_exporter"
        state: directory
        owner: "{{ node_exporter_system_group }}"
        group: "{{ node_exporter_system_group }}"

    - name: Create CA signed cert
      block:
        - name: Check whether certificate exists
          stat:
            path: /etc/node_exporter/tls.pem
          register: certificate_exists

        - name: Read existing certificate if exists
          slurp:
            src: /etc/node_exporter/tls.pem
          when: certificate_exists.stat.exists
          register: certificate
      
        - name: Generate key and cert
          delegate_to: "{{ server_name }}"
          block:
            - name: Generate an OpenSSL private key with the default values (4096 bits, RSA)
              community.crypto.openssl_privatekey_pipe:
              register: private_key
              no_log: true  # make sure that private key data is not accidentally revealed in logs!
                        
            - name: Create certificate signing request (CSR) for new certificate
              community.crypto.openssl_csr_pipe:
                privatekey_content: "{{ private_key.privatekey }}"
                subject_alt_name:
                  - "DNS:{{ instance }}"
                  - "DNS:{{ instance }}"
              no_log: true  # make sure that private key data is not accidentally revealed in logs!
              register: csr

            - name: Sign certificate with our CA
              community.crypto.x509_certificate_pipe:
                content: "{{ (certificate.content | b64decode) if certificate_exists.stat.exists else omit }}"
                csr_content: "{{ csr.csr }}"
                provider: ownca
                ownca_path: /etc/ssl/certs/ca-prometheus.pem
                ownca_privatekey_path: /etc/ssl/private/ca-prometheus.key
              register: certificate

        - name: Create private key for new certificate
          copy:
            content: "{{ private_key.privatekey }}"
            dest: /etc/node_exporter/tls.key
            owner: "{{ node_exporter_system_group }}"
            group: "{{ node_exporter_system_group }}"

        - name: Write certificate file
          copy:
            content: "{{ certificate.certificate }}"
            dest: /etc/node_exporter/tls.pem
            owner: "{{ node_exporter_system_group }}"
            group: "{{ node_exporter_system_group }}"         
          when: certificate is changed

